[{"D:\\Github\\Fractal\\fractal\\src\\index.js":"1","D:\\Github\\Fractal\\fractal\\src\\components\\input.js":"2","D:\\Github\\Fractal\\fractal\\src\\App.js":"3","D:\\Github\\Fractal\\fractal\\src\\components\\todo.js":"4","D:\\Github\\Fractal\\fractal\\src\\components\\item.js":"5","D:\\Github\\Fractal\\fractal\\src\\reportWebVitals.js":"6"},{"size":500,"mtime":1609469015191,"results":"7","hashOfConfig":"8"},{"size":3474,"mtime":1609502949055,"results":"9","hashOfConfig":"8"},{"size":238,"mtime":1609502609743,"results":"10","hashOfConfig":"8"},{"size":1377,"mtime":1609500909784,"results":"11","hashOfConfig":"8"},{"size":5297,"mtime":1609496232387,"results":"12","hashOfConfig":"8"},{"size":362,"mtime":1609469015191,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1a1wt1p",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\Github\\Fractal\\fractal\\src\\index.js",[],["28","29"],"D:\\Github\\Fractal\\fractal\\src\\components\\input.js",["30","31","32","33"],"D:\\Github\\Fractal\\fractal\\src\\App.js",[],"D:\\Github\\Fractal\\fractal\\src\\components\\todo.js",[],"D:\\Github\\Fractal\\fractal\\src\\components\\item.js",["34","35","36","37","38","39"],"import React from 'react';\r\nimport { faHome } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport TodoInput from './input';\r\nclass Item extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { showInput: false, itemValue: '', showAddTodo: false, todos:[] };\r\n        this.textInput = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.Item.Type == 'TODO') {\r\n            this.setState({\r\n                itemValue: this.props.Item.Value,\r\n                done: this.props.Item.Done\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                itemValue: this.props.Item.Value,\r\n                done: this.props.Item.Done,\r\n                todos: this.props.Item.Todos\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteItem = (index) =>{\r\n        let todos = this.props.Item.Todos;\r\n        todos.splice(index,1);\r\n        this.setState({\r\n            todos: todos\r\n        });\r\n    }\r\n\r\n    cancelAddValue = () =>{\r\n        this.setState({\r\n            showAddTodo: false\r\n        });\r\n    }\r\n    addValue = (obj) => {\r\n        this.props.Item.Todos.push(obj);\r\n        this.setState({\r\n            todos: this.props.Item.Todos,\r\n            showAddTodo: false\r\n        });\r\n    }\r\n\r\n    switchInput = (val) => {\r\n        this.setState({\r\n            showInput: val\r\n        });\r\n    }\r\n\r\n    getCardClass() {\r\n        let Item = this.props.Item;\r\n        \r\n        if (Item.Type == \"TODO\") {\r\n            if (Item.Done) {\r\n                return 'card text-white bg-success mb-3';\r\n            }\r\n            else {\r\n                if(this.props.fromBucket)\r\n                {\r\n                    return 'card text-white bg-secondary mb-3';\r\n                }\r\n                else\r\n                    return 'card border-dark mb-3';\r\n            }\r\n        }\r\n        else {\r\n            \r\n            return 'card text-white bg-info mb-3';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.getCardClass()} style={{ width: '24.5rem' }}>\r\n                <div className=\"card-header\">\r\n                    {this.props.Item.Type}\r\n                    <span style={{ float: 'right' }}>\r\n                        {this.props.Item.Type == 'TODO' ? \r\n                            this.props.Item.Done ? <i class=\"fas fa-times\" onClick={() => { this.props.Item.Done = false; this.setState({ done: this.props.Item.Done }); }}></i> : <i class=\"fas fa-check\" onClick={() => { this.props.Item.Done = true; this.setState({ done: this.props.Item.Done }); }}></i> : ''}\r\n                        <i class=\"fas fa-trash-alt\" onClick={() => this.props.onDelete(this.props.index)} style={{ paddingLeft: 10 }}></i>\r\n                    </span>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{this.props.Item.Title}</h5>\r\n                    {\r\n                        this.props.Item.Type == 'TODO' ?\r\n                            <div>\r\n\r\n                                {\r\n                                    this.state.showInput ?\r\n                                        <input type=\"text\" onMouseOver={() => { this.textInput.current.focus(); }} value={this.state.itemValue} onBlur={() => this.switchInput(false)} onChange={(event) => {\r\n                                            this.setState({\r\n                                                itemValue: event.target.value\r\n                                            }); this.props.Item.Value = event.target.value;\r\n                                        }} ref={this.textInput} placeholder=\"Enter details\" style={{ border: 0, width: '100%' }}></input>\r\n                                        :\r\n                                        <p className=\"card-text\" onMouseEnter={() => { this.switchInput(true); }} >{\r\n                                            this.props.Item.Value ? this.props.Item.Value : \"Enter details\"\r\n                                        }</p>\r\n                                }\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                {this.state.todos.map((val, index) =>\r\n                                    <div key={index}>\r\n                                        <Item index={index} Item={val} onDelete={this.deleteItem} fromBucket={true} />\r\n                                    </div>\r\n                                )}\r\n                                {\r\n                                    this.state.showAddTodo ?\r\n                                        <TodoInput onAdd={this.addValue} onCancel={this.cancelAddValue} placeHolderValue=\"Enter Todo Title\" onlyTodo={true} />\r\n                                        :\r\n                                        <div style={{ float: 'right' }} onClick={() => this.setState({ showAddTodo: true })}>\r\n                                            <i class=\"fas fa-plus\"></i><span> Add Todo</span>\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;","D:\\Github\\Fractal\\fractal\\src\\reportWebVitals.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":10,"column":22,"nodeType":"46","messageId":"47","endLine":10,"endColumn":24},{"ruleId":"44","severity":1,"message":"45","line":32,"column":26,"nodeType":"46","messageId":"47","endLine":32,"endColumn":28},{"ruleId":"44","severity":1,"message":"45","line":34,"column":56,"nodeType":"46","messageId":"47","endLine":34,"endColumn":58},{"ruleId":"44","severity":1,"message":"45","line":42,"column":22,"nodeType":"46","messageId":"47","endLine":42,"endColumn":24},{"ruleId":"48","severity":1,"message":"49","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},{"ruleId":"48","severity":1,"message":"52","line":3,"column":10,"nodeType":"50","messageId":"51","endLine":3,"endColumn":25},{"ruleId":"44","severity":1,"message":"45","line":14,"column":34,"nodeType":"46","messageId":"47","endLine":14,"endColumn":36},{"ruleId":"44","severity":1,"message":"45","line":61,"column":23,"nodeType":"46","messageId":"47","endLine":61,"endColumn":25},{"ruleId":"44","severity":1,"message":"45","line":86,"column":47,"nodeType":"46","messageId":"47","endLine":86,"endColumn":49},{"ruleId":"44","severity":1,"message":"45","line":94,"column":46,"nodeType":"46","messageId":"47","endLine":94,"endColumn":48},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'faHome' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]