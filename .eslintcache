[{"D:\\Github\\Fractal\\fractal\\src\\index.js":"1","D:\\Github\\Fractal\\fractal\\src\\components\\input.js":"2","D:\\Github\\Fractal\\fractal\\src\\App.js":"3","D:\\Github\\Fractal\\fractal\\src\\components\\todo.js":"4","D:\\Github\\Fractal\\fractal\\src\\components\\item.js":"5","D:\\Github\\Fractal\\fractal\\src\\reportWebVitals.js":"6"},{"size":500,"mtime":1609469015191,"results":"7","hashOfConfig":"8"},{"size":3474,"mtime":1609502949055,"results":"9","hashOfConfig":"8"},{"size":238,"mtime":1609502609743,"results":"10","hashOfConfig":"8"},{"size":1377,"mtime":1609736874399,"results":"11","hashOfConfig":"8"},{"size":5435,"mtime":1609736801406,"results":"12","hashOfConfig":"8"},{"size":362,"mtime":1609469015191,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1a1wt1p",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\Github\\Fractal\\fractal\\src\\index.js",[],["28","29"],"D:\\Github\\Fractal\\fractal\\src\\components\\input.js",["30","31","32","33"],"import React, { useState } from 'react';\r\nimport Combobox from 'react-widgets/lib/Combobox';\r\nconst TodoInput = ({ onlyTodo, onAdd, placeHolderValue, onCancel,allValues }) => {\r\n    const [value, setValue] = useState('');\r\n    const [type, setType] = useState('TODO');\r\n    const [bucketList, setBucketList] = useState([]);\r\n    function addValue() {\r\n        if (value) {\r\n\r\n            if (type == 'TODO') {\r\n                let todoObj = { Type: type, Value: '', Title: value, Done: false, Todos: [] };\r\n                onAdd(todoObj);\r\n            }\r\n            else {\r\n                let bucketObj = { Type: type, Value: '', Title: value, Todos: [] };\r\n                onAdd(bucketObj);\r\n                let newList = bucketList;\r\n                newList.push(value);\r\n                const unique = [...new Set(newList)];\r\n                setBucketList(unique);\r\n                console.log(bucketList);\r\n            }\r\n            setValue('');\r\n        }\r\n        else {\r\n            alert(\"Please give some title\");\r\n        }\r\n    }\r\n\r\n    function changeDropdown(e) {\r\n        setType(e.target.value);\r\n        if(e.target.value=='BUCKET')\r\n        {\r\n            let bucketList = allValues.filter(x=>x.Type=='BUCKET');\r\n            const unique = [...new Set(bucketList.map(x=>x.Title))];\r\n            setBucketList(unique);\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ display: 'inline-flex' }}>\r\n            {\r\n                type == 'TODO' ?\r\n                    <div class=\"form-outline\" style={{ width: 200 }}>\r\n                        <input type=\"text\" id=\"form1\" className=\"form-control\" onChange={(event) => {\r\n                            setValue(event.target.value);\r\n                        }} value={value} placeholder={placeHolderValue} />\r\n                    </div>\r\n                    :\r\n                    <Combobox\r\n                        data={bucketList}\r\n                        onChange={(val) => {\r\n                            setValue(val);\r\n                        }}\r\n                        value={value}\r\n                    />\r\n            }\r\n\r\n\r\n            {\r\n                onlyTodo ?\r\n                    <button className=\"btn btn-outline-secondary btn-sm\" style={{ marginLeft: 10, marginRight: 10 }} onClick={() => addValue()}>Add Todo</button>\r\n\r\n                    :\r\n                    <select onChange={(e) => { changeDropdown(e); }}\r\n                        style={{ width: 100, marginLeft: 10, borderRadius: 4 }}>\r\n                        <option>TODO</option>\r\n                        <option>BUCKET</option>\r\n                    </select>\r\n            }\r\n            {\r\n                onlyTodo ?\r\n                    <button onClick={() => onCancel()} className=\"btn btn-outline-primary btn-sm\">Cancel</button>\r\n                    :\r\n                    <button className=\"btn btn-outline-secondary btn-sm\" style={{ marginLeft: 10, marginRight: 10 }} onClick={() => addValue()}>Add</button>\r\n\r\n            }\r\n\r\n            {/* <button className=\"btn btn-outline-secondary btn-sm\" style={{ marginLeft: 10, marginRight: 10 }} onClick={() => addValue('TODO')}>Add Todo</button>\r\n            {\r\n                onlyTodo ? <button onClick={() => onCancel()} className=\"btn btn-outline-primary btn-sm\">Cancel</button> : <button onClick={() => addValue('BUCKET')} className=\"btn btn-outline-primary btn-sm\">Add Bucket</button>\r\n            } */}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoInput;","D:\\Github\\Fractal\\fractal\\src\\App.js",[],"D:\\Github\\Fractal\\fractal\\src\\components\\todo.js",[],"D:\\Github\\Fractal\\fractal\\src\\components\\item.js",["34","35","36","37","38","39"],"D:\\Github\\Fractal\\fractal\\src\\reportWebVitals.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":10,"column":22,"nodeType":"46","messageId":"47","endLine":10,"endColumn":24},{"ruleId":"44","severity":1,"message":"45","line":32,"column":26,"nodeType":"46","messageId":"47","endLine":32,"endColumn":28},{"ruleId":"44","severity":1,"message":"45","line":34,"column":56,"nodeType":"46","messageId":"47","endLine":34,"endColumn":58},{"ruleId":"44","severity":1,"message":"45","line":42,"column":22,"nodeType":"46","messageId":"47","endLine":42,"endColumn":24},{"ruleId":"48","severity":1,"message":"49","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},{"ruleId":"48","severity":1,"message":"52","line":3,"column":10,"nodeType":"50","messageId":"51","endLine":3,"endColumn":25},{"ruleId":"44","severity":1,"message":"45","line":14,"column":34,"nodeType":"46","messageId":"47","endLine":14,"endColumn":36},{"ruleId":"44","severity":1,"message":"45","line":61,"column":23,"nodeType":"46","messageId":"47","endLine":61,"endColumn":25},{"ruleId":"44","severity":1,"message":"45","line":86,"column":47,"nodeType":"46","messageId":"47","endLine":86,"endColumn":49},{"ruleId":"44","severity":1,"message":"45","line":97,"column":46,"nodeType":"46","messageId":"47","endLine":97,"endColumn":48},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'faHome' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]